// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using WF.EFCore.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WF.EFCore.Models;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace WF.EFCore.Data
{
    public class WorkflowTransactionHistoryConfiguration : IEntityTypeConfiguration<WorkflowTransactionHistory>
    {
        public void Configure(EntityTypeBuilder<WorkflowTransactionHistory> entity)
        {
            entity.HasKey(e => new { e.TransactionNo, e.SequenceNo })
                .HasName("PK_WorkflowTransactionDetails");

            entity.HasIndex(e => new { e.TransactionNo, e.UserID, e.ActionTypeID })
                .HasName("IX_WorkflowTransactionHistory");

            entity.Property(e => e.ActionTypeID)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.ActivityID)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.Property(e => e.FromActionID)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.FromActivityID)
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.Property(e => e.FromUserID)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.InDate).HasColumnType("datetime");

            entity.Property(e => e.NextActivityID)
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.Property(e => e.Notes)
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.Property(e => e.OutDate).HasColumnType("datetime");

            entity.Property(e => e.UserID)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.WorkflowStatus)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.ActionType)
                .WithMany(p => p.WorkflowTransactionHistory)
                .HasForeignKey(d => d.ActionTypeID)
                .HasConstraintName("FK_WorkflowTransactionHistory_WorkflowAction");

            entity.HasOne(d => d.Activity)
                .WithMany(p => p.WorkflowTransactionHistoryActivity)
                .HasForeignKey(d => d.ActivityID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkflowTransactionHistory_WorkflowActivity");

            entity.HasOne(d => d.FromActivity)
                .WithMany(p => p.WorkflowTransactionHistoryFromActivity)
                .HasForeignKey(d => d.FromActivityID)
                .HasConstraintName("FK_WorkflowTransactionHistory_WorkflowActivityFrom");

            entity.HasOne(d => d.NextActivity)
                .WithMany(p => p.WorkflowTransactionHistoryNextActivity)
                .HasForeignKey(d => d.NextActivityID)
                .HasConstraintName("FK_WorkflowTransactionHistory_WorkflowActivityNext");

            entity.HasOne(d => d.TransactionNoNavigation)
                .WithMany(p => p.WorkflowTransactionHistory)
                .HasForeignKey(d => d.TransactionNo)
                .HasConstraintName("FK_WorkflowTransactionHistory_WorkflowTransaction");

            entity.HasOne(d => d.WorkflowStatusNavigation)
                .WithMany(p => p.WorkflowTransactionHistory)
                .HasForeignKey(d => d.WorkflowStatus)
                .HasConstraintName("FK_WorkflowTransactionHistory_DocumentStatus");
        }
    }
}

// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using WF.EFCore.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WF.EFCore.Models;

namespace WF.EFCore.Data
{
    public partial class WFContext : DbContext
    {
        public WFContext()
        {
        }

        public WFContext(DbContextOptions<WFContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AutoNumberHistory> AutoNumberHistory { get; set; }
        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<Delegation> Delegation { get; set; }
        public virtual DbSet<DelegationDocument> DelegationDocument { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Document> Document { get; set; }
        public virtual DbSet<DocumentAccessToken> DocumentAccessToken { get; set; }
        public virtual DbSet<DocumentAttachment> DocumentAttachment { get; set; }
        public virtual DbSet<DocumentBAFinger> DocumentBAFinger { get; set; }
        public virtual DbSet<DocumentBAFingerDetail> DocumentBAFingerDetail { get; set; }
        public virtual DbSet<DocumentHistory> DocumentHistory { get; set; }
        public virtual DbSet<DocumentITAkses> DocumentITAkses { get; set; }
        public virtual DbSet<DocumentITRequest> DocumentITRequest { get; set; }
        public virtual DbSet<DocumentITRequestAppType> DocumentITRequestAppType { get; set; }
        public virtual DbSet<DocumentITRequestChangeType> DocumentITRequestChangeType { get; set; }
        public virtual DbSet<DocumentITService> DocumentITService { get; set; }
        public virtual DbSet<DocumentPDO> DocumentPDO { get; set; }
        public virtual DbSet<DocumentPDODetailAttachments> DocumentPDODetailAttachments { get; set; }
        public virtual DbSet<DocumentPDODetails> DocumentPDODetails { get; set; }
        public virtual DbSet<DocumentPTA> DocumentPTA { get; set; }
        public virtual DbSet<DocumentPTADetailAttachments> DocumentPTADetailAttachments { get; set; }
        public virtual DbSet<DocumentPTADetails> DocumentPTADetails { get; set; }
        public virtual DbSet<DocumentPremiNonPanen> DocumentPremiNonPanen { get; set; }
        public virtual DbSet<DocumentStatus> DocumentStatus { get; set; }
        public virtual DbSet<DocumentType> DocumentType { get; set; }
        public virtual DbSet<DocumentTypeNotificationTemplate> DocumentTypeNotificationTemplate { get; set; }
        public virtual DbSet<DocumentViewType> DocumentViewType { get; set; }
        public virtual DbSet<EmailContentTemplate> EmailContentTemplate { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<File> File { get; set; }
        public virtual DbSet<FileAttachmentFromPTA> FileAttachmentFromPTA { get; set; }
        public virtual DbSet<ITRequestAppType> ITRequestAppType { get; set; }
        public virtual DbSet<ITRequestChangeType> ITRequestChangeType { get; set; }
        public virtual DbSet<PDOVendor> PDOVendor { get; set; }
        public virtual DbSet<PTACostCenter> PTACostCenter { get; set; }
        public virtual DbSet<PTACostElement> PTACostElement { get; set; }
        public virtual DbSet<PTAType> PTAType { get; set; }
        public virtual DbSet<PTAWBSElement> PTAWBSElement { get; set; }
        public virtual DbSet<PTAWBSElement_temp> PTAWBSElement_temp { get; set; }
        public virtual DbSet<ReferenceCode> ReferenceCode { get; set; }
        public virtual DbSet<ReportDocType> ReportDocType { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<RoleActivity> RoleActivity { get; set; }
        public virtual DbSet<RoleDocumentType> RoleDocumentType { get; set; }
        public virtual DbSet<RoleUnit> RoleUnit { get; set; }
        public virtual DbSet<RoleUser> RoleUser { get; set; }
        public virtual DbSet<UnitStructure> UnitStructure { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserLoginToken> UserLoginToken { get; set; }
        public virtual DbSet<Workflow> Workflow { get; set; }
        public virtual DbSet<WorkflowAction> WorkflowAction { get; set; }
        public virtual DbSet<WorkflowActivity> WorkflowActivity { get; set; }
        public virtual DbSet<WorkflowRoute> WorkflowRoute { get; set; }
        public virtual DbSet<WorkflowTransaction> WorkflowTransaction { get; set; }
        public virtual DbSet<WorkflowTransactionHistory> WorkflowTransactionHistory { get; set; }
        public virtual DbSet<vwAMOBJECT> vwAMOBJECT { get; set; }
        public virtual DbSet<vwAMOBJECTTYPE> vwAMOBJECTTYPE { get; set; }
        public virtual DbSet<vwAMORGANIZATION> vwAMORGANIZATION { get; set; }
        public virtual DbSet<vwAMPROPERTY> vwAMPROPERTY { get; set; }
        public virtual DbSet<vwAMRELATION> vwAMRELATION { get; set; }
        public virtual DbSet<vwAMRELATIONTYPE> vwAMRELATIONTYPE { get; set; }
        public virtual DbSet<vwAMUSER> vwAMUSER { get; set; }
        public virtual DbSet<vwActiveUser> vwActiveUser { get; set; }
        public virtual DbSet<vwApprovalHistory> vwApprovalHistory { get; set; }
        public virtual DbSet<vwDocument> vwDocument { get; set; }
        public virtual DbSet<vwDocumentBAF> vwDocumentBAF { get; set; }
        public virtual DbSet<vwPDOApprovedJournal> vwPDOApprovedJournal { get; set; }
        public virtual DbSet<vwPTAForUpdateBudget> vwPTAForUpdateBudget { get; set; }
        public virtual DbSet<vwRole> vwRole { get; set; }
        public virtual DbSet<vwRoleMember> vwRoleMember { get; set; }
        public virtual DbSet<vwUser> vwUser { get; set; }
        public virtual DbSet<vwWorkflowInbox> vwWorkflowInbox { get; set; }

        public virtual DbSet<vwApprovalInbox> vwApprovalInbox { get; set; }
        public virtual DbSet<vwWorkflowOutbox> vwWorkflowOutbox { get; set; }

        public virtual DbSet<vwApprovalOutbox> vwApprovalOutbox { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new AutoNumberHistoryConfiguration());
            modelBuilder.ApplyConfiguration(new CompanyConfiguration());
            modelBuilder.ApplyConfiguration(new DelegationConfiguration());
            modelBuilder.ApplyConfiguration(new DelegationDocumentConfiguration());
            modelBuilder.ApplyConfiguration(new DepartmentConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentAccessTokenConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentAttachmentConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentBAFingerConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentBAFingerDetailConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentHistoryConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentITAksesConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentITRequestConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentITRequestAppTypeConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentITRequestChangeTypeConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentITServiceConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentPDOConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentPDODetailAttachmentsConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentPDODetailsConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentPTAConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentPTADetailAttachmentsConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentPTADetailsConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentPremiNonPanenConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentStatusConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentTypeConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentTypeNotificationTemplateConfiguration());
            modelBuilder.ApplyConfiguration(new DocumentViewTypeConfiguration());
            modelBuilder.ApplyConfiguration(new EmailContentTemplateConfiguration());
            modelBuilder.ApplyConfiguration(new EmployeeConfiguration());
            modelBuilder.ApplyConfiguration(new FileConfiguration());
            modelBuilder.ApplyConfiguration(new FileAttachmentFromPTAConfiguration());
            modelBuilder.ApplyConfiguration(new ITRequestAppTypeConfiguration());
            modelBuilder.ApplyConfiguration(new ITRequestChangeTypeConfiguration());
            modelBuilder.ApplyConfiguration(new PDOVendorConfiguration());
            modelBuilder.ApplyConfiguration(new PTACostCenterConfiguration());
            modelBuilder.ApplyConfiguration(new PTACostElementConfiguration());
            modelBuilder.ApplyConfiguration(new PTATypeConfiguration());
            modelBuilder.ApplyConfiguration(new PTAWBSElementConfiguration());
            modelBuilder.ApplyConfiguration(new PTAWBSElement_tempConfiguration());
            modelBuilder.ApplyConfiguration(new ReferenceCodeConfiguration());
            modelBuilder.ApplyConfiguration(new ReportDocTypeConfiguration());
            modelBuilder.ApplyConfiguration(new RoleConfiguration());
            modelBuilder.ApplyConfiguration(new RoleActivityConfiguration());
            modelBuilder.ApplyConfiguration(new RoleDocumentTypeConfiguration());
            modelBuilder.ApplyConfiguration(new RoleUnitConfiguration());
            modelBuilder.ApplyConfiguration(new RoleUserConfiguration());
            modelBuilder.ApplyConfiguration(new UnitStructureConfiguration());
            modelBuilder.ApplyConfiguration(new UserConfiguration());
            modelBuilder.ApplyConfiguration(new UserLoginTokenConfiguration());
            modelBuilder.ApplyConfiguration(new WorkflowConfiguration());
            modelBuilder.ApplyConfiguration(new WorkflowActionConfiguration());
            modelBuilder.ApplyConfiguration(new WorkflowActivityConfiguration());
            modelBuilder.ApplyConfiguration(new WorkflowRouteConfiguration());
            modelBuilder.ApplyConfiguration(new WorkflowTransactionConfiguration());
            modelBuilder.ApplyConfiguration(new WorkflowTransactionHistoryConfiguration());
            modelBuilder.ApplyConfiguration(new vwAMOBJECTConfiguration());
            modelBuilder.ApplyConfiguration(new vwAMOBJECTTYPEConfiguration());
            modelBuilder.ApplyConfiguration(new vwAMORGANIZATIONConfiguration());
            modelBuilder.ApplyConfiguration(new vwAMPROPERTYConfiguration());
            modelBuilder.ApplyConfiguration(new vwAMRELATIONConfiguration());
            modelBuilder.ApplyConfiguration(new vwAMRELATIONTYPEConfiguration());
            modelBuilder.ApplyConfiguration(new vwAMUSERConfiguration());
            modelBuilder.ApplyConfiguration(new vwActiveUserConfiguration());
            modelBuilder.ApplyConfiguration(new vwApprovalHistoryConfiguration());
            modelBuilder.ApplyConfiguration(new vwDocumentConfiguration());
            modelBuilder.ApplyConfiguration(new vwDocumentBAFConfiguration());
            modelBuilder.ApplyConfiguration(new vwPDOApprovedJournalConfiguration());
            modelBuilder.ApplyConfiguration(new vwPTAForUpdateBudgetConfiguration());
            modelBuilder.ApplyConfiguration(new vwRoleConfiguration());
            modelBuilder.ApplyConfiguration(new vwRoleMemberConfiguration());
            modelBuilder.ApplyConfiguration(new vwUserConfiguration());
            modelBuilder.ApplyConfiguration(new vwWorkflowInboxConfiguration());
            modelBuilder.ApplyConfiguration(new vwApprovalInboxConfiguration());
            modelBuilder.ApplyConfiguration(new vwWorkflowOutboxConfiguration());
            modelBuilder.ApplyConfiguration(new vwApprovalOutboxConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}


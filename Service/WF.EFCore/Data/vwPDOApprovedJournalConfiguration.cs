// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using WF.EFCore.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WF.EFCore.Models;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace WF.EFCore.Data
{
    public class vwPDOApprovedJournalConfiguration : IEntityTypeConfiguration<vwPDOApprovedJournal>
    {
        public void Configure(EntityTypeBuilder<vwPDOApprovedJournal> entity)
        {
            entity.HasKey(e => new { e.DocTransNo, e.LineItem });

            entity.Property(e => e.AccountNo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.Amount).HasColumnType("decimal(20, 0)");

            entity.Property(e => e.ApprovedAmount).HasColumnType("decimal(20, 0)");

            entity.Property(e => e.BankAccountName)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);

            entity.Property(e => e.BankName)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);

            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.JobDesc)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.Property(e => e.LastUpdateBy)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);

            entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

            entity.Property(e => e.PaidDate).HasColumnType("datetime");

            entity.Property(e => e.SAPJournalNo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.VendorCode)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        }
    }
}

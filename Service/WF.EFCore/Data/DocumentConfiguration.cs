// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using WF.EFCore.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WF.EFCore.Models;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace WF.EFCore.Data
{
    public class DocumentConfiguration : IEntityTypeConfiguration<Document>
    {
        public void Configure(EntityTypeBuilder<Document> entity)
        {
            entity.HasKey(e => e.DocTransNo);

            entity.HasIndex(e => new { e.DocTransNo, e.DocNo, e.DocDate, e.DocType, e.DocOwner, e.DocStatus, e.Title, e.Description, e.WorkflowTransactionNo, e.LastUpdateDate, e.LastUpdateUser, e.UnitID, e.DepartmentID, e.OriginalDocTransNo })
                .HasName("IX_Document");

            entity.Property(e => e.DepartmentID)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.Property(e => e.DocDate).HasColumnType("date");

            entity.Property(e => e.DocNo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.DocOwner)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.DocStatus)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.DocType)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.LastUpdateDate).HasColumnType("datetime");

            entity.Property(e => e.LastUpdateUser)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.ReleaseStrategy)
                .HasMaxLength(8000)
                .IsUnicode(false);

            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.Property(e => e.UnitID)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.WFFlag)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.DocumentStatus)
                .WithMany(p => p.Document)
                .HasForeignKey(d => d.DocStatus)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Document_DocumentStatus");

            entity.HasOne(d => d.DocumentType)
                .WithMany(p => p.Document)
                .HasForeignKey(d => d.DocType)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Document_DocumentType");

            entity.HasOne(d => d.Unit)
                .WithMany(p => p.Document)
                .HasForeignKey(d => d.UnitID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Document_Unit");

            entity.HasOne(d => d.WorkflowTransaction)
                .WithMany(p => p.Document)
                .HasForeignKey(d => d.WorkflowTransactionNo)
                .HasConstraintName("FK_Document_WorkflowTransaction");
        }
    }
}

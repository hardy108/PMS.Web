// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace FP.EFCore.Model
{
    public partial class FPContext : DbContext
    {
        public string ConnectionString { get; }

        public FPContext()
        {
            throw new Exception("Invalid connection string");
        }

        public FPContext(DbContextOptions<FPContext> options)
            : base(options)
        {
            foreach (var extension in options.Extensions)
            {
                if (extension.GetType() == typeof(Microsoft.EntityFrameworkCore.SqlServer.Infrastructure.Internal.SqlServerOptionsExtension))
                {
                    ConnectionString = ((Microsoft.EntityFrameworkCore.SqlServer.Infrastructure.Internal.SqlServerOptionsExtension)extension).ConnectionString;
                    break;
                }
            }
        }

        public virtual DbSet<MEMPLOYEEFP> MEMPLOYEEFP { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<MEMPLOYEEFP>(entity =>
            {
                entity.HasKey(e => e.EMPID);

                entity.Property(e => e.EMPID)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .ValueGeneratedNever();

                entity.Property(e => e.CREATED).HasColumnType("datetime");

                entity.Property(e => e.CREATEDBY)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EMPCODE)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FOTO).HasColumnType("image");

                entity.Property(e => e.FP1).HasColumnType("image");

                entity.Property(e => e.FP2).HasColumnType("image");

                entity.Property(e => e.FP3).HasColumnType("image");

                entity.Property(e => e.STATUS)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.UNITCODE)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UPDATED).HasColumnType("datetime");

                entity.Property(e => e.UPDATEDBY)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
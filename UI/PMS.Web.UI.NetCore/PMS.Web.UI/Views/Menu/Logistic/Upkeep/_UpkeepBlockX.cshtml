@using PMS.Web.UI.Code
@using PMS.Shared.Models
@{

    string tblBlockId = "tblUpkeepBlock";
    string tblMaterialId = "tblUpkeepMaterial";
    string tblEmployeeId = "tblUpkeepEmployee";
    string tblVendorId = "tblUpkeepVendor";
    string isReadOnlyString = GeneralHelpers.BooleanStringHtml(ViewBag.ReadOnly);

}

@if (!(ViewBag.ReadOnly))
{
    <x-form-row>
        <x-form-col xs-size="12">
            <button id="btnPilihBlockTop" class="btn btn-primary pull-left" onclick="@(tblBlockId)_Handlers.showForm()">
                Tambah
            </button>
            &nbsp;&nbsp;
            <button id="btnHapusBlockTop" class="btn" onclick="@(tblBlockId)_Handlers.deleteRows()">
                Hapus
            </button>
        </x-form-col>
    </x-form-row>
    <x-form-row>&nbsp;</x-form-row>
}
<x-form-row>
    <x-form-col xs-size="12">
        <table id="@(tblBlockId)" class="table table-bordered table-hover" data-paging="true" data-sorting="true"></table>
    </x-form-col>
</x-form-row>

@if (!(ViewBag.ReadOnly))
{
    <x-form-row>
        <x-form-col xs-size="12">
            <button id="btnPilihBlock" class="btn btn-primary pull-left" onclick="@(tblBlockId)_Handlers.showForm()">
                Tambah
            </button>
            &nbsp;&nbsp;
            <button id="btnHapusBlock" class="btn" onclick="@(tblBlockId)_Handlers.deleteRows()">
                Hapus
            </button>
        </x-form-col>
    </x-form-row>

    <x-modal id="mdlBlock" caption="Pilih Kegiatan, Mandor, dan Blok">
        <x-modal-body>
            <x-form-row>
                <x-field-data-list-block id="BLOCKID" binding-field="BLOCKID" caption="Blok" multiple="true" xs-size="12"
                                         Ascendants="@(new List<FilterAscendant>
                        {   new FilterAscendant { ElementID = "DIVID", FieldID = "DivisionID" }

                        })" value-field="*">
                </x-field-data-list-block>
            </x-form-row>

            <x-form-row>
                <x-field-data-list-employee id="EMPLOYEEID" binding-field="EMPLOYEEID" caption="Karyawan" multiple="true" xs-size="12" value-field="*">
                </x-field-data-list-employee>
            </x-form-row>

            <x-form-row>
                <x-field-data-list-material id="MATERIALID" binding-field="MATERIALID" caption="Material" multiple="true" xs-size="12" value-field="*">
                </x-field-data-list-material>
            </x-form-row>

            @if (ViewBag.MainFormID == "Form_UPKEEPBORONGAN")
            {
                <x-form-row>
                    <x-field-number id="DEFOUTPUT" binding-field="OUTPUT" value="0" caption="Hasil Kerja" xs-size="12" md-size="4"></x-field-number>
                </x-form-row>
            }


        </x-modal-body>
        <x-modal-footer>
            <x-form-row>
                <x-form-col xs-size="12">
                    <button id="btnResetBlock" class="btn" onclick="resetElements('mdlBlock')">
                        Reset
                    </button>
                    &nbsp;&nbsp;
                    <button id="btnAddBlock" class="btn btn-primary" onclick="@(tblBlockId)_Handlers.addRows()">
                        Tambah
                    </button>
                    &nbsp;&nbsp;
                    <button id="btnAddCloseBlock" class="btn btn-primary" onclick="@(tblBlockId)_Handlers.addRows(true)">
                        Tambah dan Tutup
                    </button>
                    &nbsp;&nbsp;
                    <button id="btnCloseBlock" class="btn" onclick="$('#mdlBlock').modal('hide')">
                        Tutup
                    </button>
                </x-form-col>
            </x-form-row>
        </x-modal-footer>
    </x-modal>
}


<script>

    var @(tblBlockId)_Handlers = {
        columns: [
            {
                "type": "html",
                "name": "CHKSELECT",
                "title": "<input type='checkbox' id='chkAllBlock' name='chkDeleteBlock' onclick='checkAllCheckBox(this)'>",
                "visible": !@(isReadOnlyString),
                "formatter": function (value,option,rowdata) {
                    return "<input type='checkbox' name='chkDeleteBlock'>";
                },
            },
            {
                "type": "text",
                "name": "key",
                "visible": false
            },
            {
                "type": "text",
                "name": "UPKEEPCODE",
                "title": "No BKM",
                "visible": false
            },
            {
                "type": "text",
                "name": "BLOCKID",
                "title": "Block",
                "visible": true
            },
            {
                "type": "number",
                "name": "THNTANAM",
                "title": "Planting",
                "visible": true,
            },
            {
                "type": "number",
                "name": "LUASBLOCK",
                "title": "Luas (Ha)",
                "visible": true,
            },
            {
                "type": "number",
                "name": "VALUE",
                "title": "Jumlah TK (HK)",
                "visible": true, @*@(isReadOnlyString),*@
            },
            @*{
                "type": "html",
                "name": "VALUE_INPUT",
                "title": "Jumlah TK (HK)",
                "visible": !@(isReadOnlyString),
                "formatter": function (value,option,rowdata) {
                    return "<input type='number' name='VALUE' value='" + rowdata["VALUE"] + "'  data-bf='VALUE'  onfocusout='updateInputToRow(this)'>";
                },

            },*@
            {
                "type": "number",
                "title": "Hasil Kerja",
                "name": "OUTPUTAREA",
                "visible": @(isReadOnlyString),
            },
            {
                "type": "html",
                "name": "OUTPUTAREA_INPUT",
                "title": "Hasil Kerja",
                "visible": !@(isReadOnlyString),
                "formatter": function (value,option,rowdata) {
                    return "<input type='number' name='OUTPUTAREA' value='" + rowdata["OUTPUTAREA"] + "'  data-bf='OUTPUTAREA'  onfocusout='updateInputToRow(this)'>";
                },

            },
            {
                "type": "text",
                "title": "Satuan",
                "name": "SATUAN",
                "visible": true
            },
            {
                "type": "number",
                "title": "Konversi",
                "name": "OUTPUTKONVERSI",
                "visible": true
            },
            {
                "type": "text",
                "title": "Konversi Sat",
                "name": "KONVSAT",
                "visible": true
            },
        ],
        showForm: function () {
            if (!$('#DIVID').flexdatalist('value')) {
                alert("Divisi belum dipilih");
                return false;
            }

            if (!$('#MANDORID').flexdatalist('value')) {
                alert("Mandor belum dipilih");
                return false;
            }

            if (!$('#ACTIVITYID').flexdatalist('value')) {
                alert("Pekerjaan belum dipilih");
                return false;
            }

            $('#mdlBlock').modal('show');
            return true;
        },
        initTable: function (rows) {
            if (isAny(rows)) {
                rows.forEach(function (row) {
                    row.THNTANAM = dictBlocks[row.BLOCKID].BLOCK.THNTANAM;
                    row.LUASBLOCK = dictBlocks[row.BLOCKID].BLOCK.LUASBLOCK;
                });
            }

            $("#@(tblBlockId)").footable({
                "columns": @(tblBlockId)_Handlers.columns,
                "rows": rows
            });
            return;
        },
        rowKeys: ["BLOCKID"],
        getRowKey: function (values) {
            if (values)
                return helper.footableRowKey(values, @(tblBlockId)_Handlers.rowKeys);
            return null;
        },

        isRowExist: function (values, allrows) {
            return helper.footableRowExist(values, allrows,@(tblBlockId)_Handlers.rowKeys);
        },

        length: function () {
            var ft = FooTable.get('#@(tblBlockId)');
            return ft.rows.all.length;
        },
        
        selectedEmployees: [],
        selectedBlocks: [],


        addRows: function (closeForm) {

            var upkeepcode = $('#UPKEEPCODE').val();
            @(tblBlockId)_Handlers.selectedBlocks = $('#BLOCKID').flexdatalist('value');
            if (!@(tblBlockId)_Handlers.selectedBlocks || !(@(tblBlockId)_Handlers.selectedBlocks.length)) {
                alert("Blok belum dipilih");
                return false;
            }

            @(tblBlockId)_Handlers.selectedEmployees = $('#EMPLOYEEID').flexdatalist('value');
            var defaultOutput = $('#DEFOUTPUT').val();
            var mainFormId = @(ViewBag.MainFormID).id;
            if (!@(tblBlockId)_Handlers.selectedEmployees || !@(tblBlockId)_Handlers.selectedEmployees.length && defaultOutput === "") {
                if (mainFormId === "Form_UPKEEPBORONGAN")
                {
                    alert("Karyawan atau jumlah hari kerja harus diisi salah satu");
                    return false;
                }
                else
                {
                    alert("Karyawan belum dipilih");
                    return false;
                }

            }

            var jumlahOrang = $('#DEFEMPCOUNT').val();
            //if (!jumlahOrang || jumlahOrang < 0) {
            //    alert("Jumlah orang harus diisi");
            //    return false;
            //}

            var defaultVolume = $('#DEFVOL').val();
            if (!defaultVolume)
                defaultVolume = 0;
            else
                defaultVolume = defaultVolume * 0.01;

            var ft = FooTable.get('#@(tblBlockId)');
            @*if (!ft) {
                alert("invalid table");
                return;
            }
            else {
                if (ft.rows.all.length !== 0) {
                    var del = true;
                    ft.rows.all.forEach(function (row) {
                        //row.ft.$tr
                        del = true;
                        @(tblBlockId)_Handlers.selectedBlocks.forEach(function (block) {
                            if (block.BLOCKID === row.value.key ) {
                                del = false;
                            }
                        });

                        if (del) {
                            row.delete(false);
                        }
                    });
                    if (del) {
                        ft.draw();
                    }
                }

            }*@

            var added = 0, harvestingBlocks = {};

            @(tblBlockId)_Handlers.selectedBlocks.forEach(function (block) {
                @(tblBlockId)_Handlers.updateEmployeeCount(block.BLOCKID, jumlahOrang, ft);
                        var detail =
                        {
                            UPKEEPCODE: upkeepcode,
                            EMPCOUNT: jumlahOrang,
                            BLOCKID: block.BLOCKID,
                            LUASBLOCK: block.LUASBLOCK,
                            VOL: block.LUASBLOCK,
                            THNTANAM: block.THNTANAM
                        };
                        detail.key = @(tblBlockId)_Handlers.getRowKey(detail);
                        if (!@(tblBlockId)_Handlers.isRowExist(detail, ft.rows.all)) {
                            ft.rows.add(detail, false);
                            added++;
                            
                        }
            });
            if (added) {
                @(tblEmployeeId)_Handlers.addRows();
                if (mainFormId === "Form_UPKEEPBORONGAN")
                    @(tblVendorId)_Handlers.addRows();

                var matId = $('#MATERIALID').flexdatalist('value');
                if ((Array.isArray(matId) && matId.length > 0))
                    @(tblMaterialId)_Handlers.addRows();


                ft.draw();
            }
            if (closeForm)
                $('#mdlBlock').modal('hide');
            return;
        },

        deleteRows: function () {
            if (!confirm('Yakin akan menghapus detail Block?'))
                return;

            var ft = FooTable.get('#@(tblBlockId)');
            var deletedCount = 0,
                deletedEmployees = {},
                deletedBlocks = {};
            if (ft) {
                $('[name = "chkDeleteBlock"]').each(function () {
                    if (this.id !== 'chkAllBlock') {
                        if (this.checked) {
                            var $row = FooTable.getRow($(this).closest('tr'));
                            $row.delete(false);
                            deletedCount++;
                        }

                    }
                });
                if (deletedCount) {
                    ft.draw();
                }

            }
        },
        saveRows : function () {
            var ft = FooTable.get('#@(tblBlockId)');
            if (!ft) {
                alert("invalid table");
                return null;
            }

            var rows = [];
            $.each(ft.rows.all, function (i, row) {
                if (row.val()["VALUE"] == 0 && mode == "New") {
                    alert("Jumlah Hk belum dipilih");
                    exit;
                    return false;
                } else {
                    rows.push(row.val());
                }
            });
            return rows;
        },
        updateEmployeeCount: function (blockId, employeeCount, ft) {
            if (!ft)
                ft = FooTable.get('#@(tblBlockId)');
            if (ft) {
                $.each(ft.rows.all, function (i, row) {
                    var v = row.val();
                    if (v["BLOCKID"] === blockId) {
                        v["EMPCOUNT"] = employeeCount;
                        row.val(v, false, true)
                    }
                });
            }
        },

        updateEmployeeCountOnRow: function (element) {
            var employeeCount = $(element).val();
            var $tr = $(element).closest('tr');
            var $row = FooTable.getRow($tr);
            var $rowVal = $row.val();
            var blockId = $rowVal["BLOCKID"];
            var oldEmployeeCount = $rowVal["EMPCOUNT"];

            if (employeeCount != oldEmployeeCount) {
                if (employeeCount <= 0) {
                    $(element).val(oldEmployeeCount);
                    return false;
                }
                @(tblBlockId)_Handlers.updateEmployeeCount(blockId, employeeCount);
            }

        }


    };
</script>
